// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Organization {
  // Auto-generated unique ID
  id           Int      @id @default(autoincrement())
  // Name of the organization
  name         String?
  // Email of the organization
  email        String?
  // Password for the organization
  password     String?
  //username for the organization
  username     String?
  // Unique string? for the organization
  uniquestring String?
  // is verified status
  isVerified   Boolean  @default(false)
  // Login history as a JSON string?
  loginHistory String?
  // URL for the organization's logo
  logoUrl      String?
  // Created at timestamp
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  // Updated at timestamp
  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamp(6)

  events Event[]

  // Ensure email is unique across organizations
  @@unique([email])
}

model Event {
  id                  Int          @id @default(autoincrement())
  name                String?
  organization        Organization @relation(fields: [organizationId], references: [id])
  organizationId      Int
  formJson            String?
  filledDataJson      String?
  certificateTemplate String?
  startDate           DateTime?
  deadline            DateTime?
  createdAt           DateTime     @default(now()) @db.Timestamp(6)
  updatedAt           DateTime     @default(now()) @updatedAt @db.Timestamp(6)
  Form                Form[]

  @@index([organizationId], name: "organizationId")
}

model Form {
  id              Int        @id @default(autoincrement())
  event           Event      @relation(fields: [eventId], references: [id])
  eventId         Int
  formDescription String
  formFields      String[]
  formResponses   String[]
}

model Template {
  id              Int          @id @default(autoincrement())
  name            String?
  type            TemplateType
  templateContent String?
  createdAt       DateTime     @default(now()) @db.Timestamp(6)
  updatedAt       DateTime     @default(now()) @updatedAt @db.Timestamp(6)

  @@map("templates")
}

enum TemplateType {
  Email
  Form
  Certificate
}
